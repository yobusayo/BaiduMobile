#-*- coding:utf-8 -*-
from bs4 import BeautifulSoup
import urllib
import BaiduMobileApps
import sys
import MySQLdb
import re

ratingDic = {
             '0':0,
             '1':0.5,
             '2':1,
             '3':1.5,
             '4':2,
             '5':2.5,
             '6':3,
             '7':3.5,
             '8':4,
             '9':4.5,
             '10':5
             }

conn = MySQLdb.connect(host='localhost',user='root',passwd='root',db='baidu_mobile', charset='utf8')

def getAppId(appName):
    url = 'http://app.hicloud.com/search/'+str(appName)
    request = urllib.urlopen(url)
    html = request.read()

    soup = BeautifulSoup(html)
#     lay_main = soup.find('div',attrs={'class':'lay-main'})
    first_div = soup.findAll('div',attrs={'class':'game-info  whole'})[0]
#     print first_div
    #解析发现appId在该div的a标签的链接中，href = 'www.xxx.com/xxx/appId'
    appId = first_div.find('a')['href'].split('/')[-1]
    name = first_div.find('a').contents[0]
    reload(sys)
    sys.setdefaultencoding('utf-8')
    if(appName == name):
        return appId
    else:
        return 0
    
def isExist(appName):
    sql = 'select * from app_info where app_name = \''+str(appName)+'\''
    cursor = conn.cursor()
    result = cursor.execute(sql)
    if result:
        print result
        return True
    else:
        return False
    
def process():
    apps = BaiduMobileApps.getAllApps()
    cursor = conn.cursor()
    for app in apps:
        appId = getAppId(app)
        if appId != 0:
            url = 'http://appstore.huawei.com/app/'+str(appId)
            request = urllib.urlopen(url)
            html = request.read()
        
            soup = BeautifulSoup(html)            
            #提取数字的正则表达式            
            pattern = re.compile('\d')
            
            category = soup.find(attrs = {'class':'unit-locate'}).find_all('a')[-1].string
            
            appInfo = soup.find_all(attrs = {'class':'app-info-ul nofloat'})
            #第一部分的span包括名称、下载量、打分的信息
            spans1 = BeautifulSoup(str(appInfo[0])).find_all('span')
            
            appName = spans1[0].string
            downloadNum = ''.join(re.findall(pattern, str(spans1[1])))
            rating = ratingDic.get(''.join(re.findall(pattern, spans1[2].get('class'))))            
            
            spans2 = BeautifulSoup(str(appInfo[1])).find_all('span')
            size = spans2[0].string
            updateTime = spans2[1].string
            developer = spans2[2].string
            version = spans2[3].string
                         
            description = soup.find(attrs = {'id':'app_strdesc'}).contents[0]
            reviewNum = ''.join(re.findall(pattern,soup.find(attrs = {'class':'sub nofloat'}).find('span').string))
             
            data = [appName,appId,'',rating,0,0,description,'',version,updateTime,size,category,reviewNum,'huawei',downloadNum]
             
            sql = 'insert into app_info values(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)'
            if(not isExist(appName)):
                cursor.execute(sql,data)
                print 'finished one'
                conn.commit()
        else:#appId = 0, app is not in market
            data = [appName,0,'',0,0,0,'','','','','','',0,'huawei',0]
            sql = 'insert into app_info values(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)'
            cursor.execute(sql,data)
            conn.commit()
    cursor.close()
    conn.close()
            
            #评论具体内容专门爬
#             reviews = [
#                        {
#                         'user':'',
#                         'time':'',
#                         'reviewRating':'',
#                         'source':'',
#                         'content':''
#                         },
#                        {}
#                        ]
    
if __name__ == '__main__':
    process()
#     apps = BaiduMobileApps.getAllApps()
#     for app in apps:
#         print str(app)+str(getAppId(app))
#     getAppId('百度')
